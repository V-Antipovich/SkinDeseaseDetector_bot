from torchvision import transforms
from PIL import Image

import torch.nn as nn
import torch
from torchvision.models import resnet18


num_to_name = {
    0: "акне или розацеа. Но для точного диагноза нужно обратиться к врачу.",
    1: "рак кожи базальных клеток. Но для точного диагноза нужно обратиться к врачу.",
    2: "атопический дерматит. Но для точного диагноза нужно обратиться к врачу.",
    3: "буллёзный эпидермолиз. Но для точного диагноза нужно обратиться к врачу.",
    4: "импетиго. Но для точного диагноза нужно обратиться к врачу.",
    5: "экзема. Но для точного диагноза нужно обратиться к врачу.",
    6: "экзантема. Но для точного диагноза нужно обратиться к врачу.",
    7: "алопеция. Но для точного диагноза нужно обратиться к врачу.",
    8: "ВПЧ или ЗППП. Но для точного диагноза нужно обратиться к врачу.",
    9: "световые заболевания кожи или нарушение пигментации. Но для точного диагноза нужно обратиться к врачу.",
    10: "волчанка или заболевание соединительных тканей. Но для точного диагноза нужно обратиться к врачу.",
    11: "меланома. Но для точного диагноза нужно обратиться к врачу.",
    12: "грибок ногтей или иное ногтевое заболевание. Но для точного диагноза нужно обратиться к врачу.",
    13: "ничего серьезного. Но если тебя что-то беспокоит, то нужно обратиться к врачу.",
    14: "контактный дерматик. Но для точного диагноза нужно обратиться к врачу.",
    15: "псориаз или красный плоский лишай. Но для точного диагноза нужно обратиться к врачу.",
    16: "болезнь Лайма или похожее заболевание вследствие укуса. Но для точного диагноза нужно обратиться к врачу.",
    17: "себорейный кератоз или иная доброкачественная опухоль. Но для точного диагноза нужно обратиться к врачу.",
    18: "системное заболевание. Но для точного диагноза нужно обратиться к врачу.",
    19: "кандидоз или иное грибковое заболевание. Но для точного диагноза нужно обратиться к врачу.",
    20: "крапивница. Но для точного диагноза нужно обратиться к врачу.",
    21: "гемангиома. Но для точного диагноза нужно обратиться к врачу.",
    22: "васкулит. Но для точного диагноза нужно обратиться к врачу.",
    23: "бородавка или контагиозный моллюск. Но для точного диагноза нужно обратиться к врачу."
}

# model = resnet18()
# last_layer_features_in = model.fc.in_features
# model.fc = nn.Linear(last_layer_features_in, 24)
# model.load_state_dict(torch.load('model_toooooooooooop.pt',
#                                 map_location=torch.device('cpu')))
model = resnet18(pretrained=True)
last_layer_features_in = model.fc.in_features
model.fc = nn.Linear(last_layer_features_in, 24)
model.load_state_dict(torch.load('moooooooooooooooooooooooooooooodel.pt'))
model.eval()
model.cpu()


def predict_class(img_path, model):
    img = Image.open(img_path)
    transf = transforms.Compose([
        transforms.Resize((224, 224)),
        transforms.ToTensor(),
        transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])
    ])
    img_norm = transf(img).unsqueeze(0)
    with torch.no_grad():
        model.eval()
        output = model(img_norm)
        return num_to_name[output.data.numpy().argmax()]
